# Swarmalator system configuration
dynamics:
  type: "swarmalator"
  n_particles: 50
  dimension: 3
  parameters:
    J: 1.0              # Coupling strength
    K: 1.0              # Phase coupling  
    box_size: 5.0       # Initial position range
    frequency_std: 0.1  # Natural frequency std
    seed: 42
  initial_conditions:
    # Positions initialized randomly in [-box_size/2, box_size/2]^D
    # Orientations initialized randomly on unit sphere
    # Phases initialized randomly in [0, 2Ï€]
    # Natural frequencies drawn from N(0, frequency_std^2)

simulation:
  solver: "Tsit5"
  time:
    t0: 0.0
    t1: 10.0
    dt: 0.01
  saveat:
    # Use default: save at every simulation timestep
  rtol: 1e-4
  atol: 1e-7

visualization:
  backend: "matplotlib"
  animation: true
  save_path: "outputs/swarmalator_animation.mp4"
  fps: 30
  quality: "high"
  show_trajectories: false
  parameters:
    figsize: [10, 8]
    dpi: 150

inference:
  method: "GA_inference"
  feature_library:
    type: "orthogonal_polynomial"
    degree: 3
  optimizer: "adam"
  learning_rate: 1e-3
  epochs: 5000
  sparsity: 0.01
  coupling_method: "dense"
  differentiation_method: "savgol"

evaluation:
  metrics: ["mse", "r2", "trajectory"]
  save_figures: true
  save_model: true
  save_results: true
  comparison_time_horizon: 5.0  # Compare over 5 time units

output_dir: "./outputs"